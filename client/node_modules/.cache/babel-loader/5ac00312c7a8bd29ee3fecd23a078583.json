{"ast":null,"code":"var _jsxFileName = \"/Users/dfraile/cursoReact/crwn-clothing/client/src/App.js\";\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect'; //import './App.css';//Moved to global.styles.js\n//import HomePage from  './pages/homepage/homepage.component';//to lazy()\n//import ShopPage from './pages/shop/shop.component';//to lazy\n//import SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';//lazy\n//import CheckoutPage from './pages/checkout/checkout.component';//to lazy\n\nimport Header from './components/header/header.component';\nimport Spinner from './components/spinner/spinner.component'; //Global styles instead App.css\n\nimport { GlobalStyle } from './global.styles';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { checkUserSession } from './redux/user/user.actions';\n/*//Not needed with Sagas\nimport { auth, createUserProfileDocument\n  //, addCollectionAndDocuments //To add shop.data.js to firebase\n} from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors'\n//import { selectCollectionsForPreview } from './redux/shop/shop.selectors';////To add shop.data.js to firebase\n*/\n\n/* It works with or wihtout .jsx or .js */\n\nconst HomePage = lazy(() => import('./pages/homepage/homepage.component'));\nconst ShopPage = lazy(() => import('./pages/shop/shop.component'));\nconst SignInAndSignUpPage = lazy(() => import('./pages/sign-in-and-sign-up/sign-in-and-sign-up.component'));\nconst CheckoutPage = lazy(() => import('./pages/checkout/checkout.component'));\n\nconst App = ({\n  checkUserSession,\n  currentUser\n}) => {\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]);\n  /* Not needed with Redux. See dispatch at bottom */\n\n  /*\n  constructor() {\n    super();\n     this.state = {\n      currentUser: null\n    }\n  }\n  */\n  //unsubscribeFromAuth = null;\n  //componentDidMount(){//Not needed with hooks\n\n  /* With sagas */\n  //const { checkUserSession } = this.props;\n  //checkUserSession();\n  //const { setCurrentUser\n  //, collectionsArray//To add shop.data.js to firebase\n  //} = this.props;\n\n  /* //Remove whe using sagas\n  this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    if(userAuth){\n      \n      //get authenticated user from firebase or create it when not exists\n      const userRef = await createUserProfileDocument(userAuth);\n    \n      userRef.onSnapshot(snapShot => {\n        setCurrentUser({\n          id: snapShot.id,\n          ...snapShot.data()\n        })\n        \n        //Not needed with Redux. Using setCurrentUser instead \n        \n        //this.setState({\n          //currentUser: {\n            //id: snapShot.id,\n            //...snapShot.data()\n          //}\n        //});\n       });      \n    }\n     setCurrentUser(userAuth);\n    //To add shop.data.js to firebase\n    \n    //addCollectionAndDocuments('collections', collectionsArray.map(\n      //({title, items}) => ({ title, items})\n    //));\n    \n  //});\n  */\n  //}\n  //componentWillUnmount() {\n  //this.unsubscribeFromAuth();\n  //}\n  //render(){//Not needed with hooks\n\n  /* Switch shows just one of options, the first matches */\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(GlobalStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    render: () => currentUser ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }) : React.createElement(SignInAndSignUpPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser //, collectionsArray: selectCollectionsForPreview //To add shop.data.js to firebase\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/dfraile/cursoReact/crwn-clothing/client/src/App.js"],"names":["React","useEffect","lazy","Suspense","Route","Switch","Redirect","connect","createStructuredSelector","Header","Spinner","GlobalStyle","selectCurrentUser","checkUserSession","HomePage","ShopPage","SignInAndSignUpPage","CheckoutPage","App","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, lazy, Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\n//import './App.css';//Moved to global.styles.js\n\n//import HomePage from  './pages/homepage/homepage.component';//to lazy()\n//import ShopPage from './pages/shop/shop.component';//to lazy\n//import SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';//lazy\n//import CheckoutPage from './pages/checkout/checkout.component';//to lazy\nimport Header from './components/header/header.component';\nimport Spinner from './components/spinner/spinner.component';\n\n//Global styles instead App.css\nimport { GlobalStyle } from './global.styles';\n\nimport { selectCurrentUser } from './redux/user/user.selectors'\nimport { checkUserSession } from './redux/user/user.actions';\n\n/*//Not needed with Sagas\nimport { auth, createUserProfileDocument\n  //, addCollectionAndDocuments //To add shop.data.js to firebase\n} from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors'\n//import { selectCollectionsForPreview } from './redux/shop/shop.selectors';////To add shop.data.js to firebase\n*/\n/* It works with or wihtout .jsx or .js */\n\nconst HomePage = lazy(()=> import('./pages/homepage/homepage.component'));\nconst ShopPage = lazy(()=> import('./pages/shop/shop.component'));\nconst SignInAndSignUpPage = lazy(()=>import('./pages/sign-in-and-sign-up/sign-in-and-sign-up.component'));\nconst CheckoutPage = lazy(()=>import('./pages/checkout/checkout.component'));\n\nconst App =({checkUserSession, currentUser}) => {\n  \n  useEffect(()=>{\n    checkUserSession()\n  }, [checkUserSession]);\n\n  /* Not needed with Redux. See dispatch at bottom */\n  /*\n  constructor() {\n    super();\n\n    this.state = {\n      currentUser: null\n    }\n  }\n  */\n\n  //unsubscribeFromAuth = null;\n\n  //componentDidMount(){//Not needed with hooks\n\n    /* With sagas */\n    //const { checkUserSession } = this.props;\n    //checkUserSession();\n    \n    //const { setCurrentUser\n      //, collectionsArray//To add shop.data.js to firebase\n     //} = this.props;\n\n    \n    /* //Remove whe using sagas\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if(userAuth){\n        \n        //get authenticated user from firebase or create it when not exists\n        const userRef = await createUserProfileDocument(userAuth);\n      \n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          })\n          \n          //Not needed with Redux. Using setCurrentUser instead \n          \n          //this.setState({\n            //currentUser: {\n              //id: snapShot.id,\n              //...snapShot.data()\n            //}\n          //});\n\n        });      \n      }\n\n      setCurrentUser(userAuth);\n      //To add shop.data.js to firebase\n      \n      //addCollectionAndDocuments('collections', collectionsArray.map(\n        //({title, items}) => ({ title, items})\n      //));\n      \n    //});\n    */\n  //}\n\n  //componentWillUnmount() {\n    //this.unsubscribeFromAuth();\n  //}\n\n  //render(){//Not needed with hooks\n    /* Switch shows just one of options, the first matches */  \n    return (\n      <div>\n        <GlobalStyle />\n        <Header />        \n        <Switch>\n          <Suspense fallback={<Spinner />}>\n            <Route exact path='/' component={HomePage} />\n            <Route path='/shop' component={ShopPage} />\n            <Route exact path='/checkout' component={CheckoutPage} />\n            <Route exact path='/signin' render={() => \n              currentUser ? (\n                <Redirect to='/' />\n              ) : (\n                <SignInAndSignUpPage />\n              )} />\n          </Suspense>\n        </Switch>\n      </div>\n    );\n  }\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n  //, collectionsArray: selectCollectionsForPreview //To add shop.data.js to firebase\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n "]},"metadata":{},"sourceType":"module"}