{"ast":null,"code":"import _objectSpread from \"/Users/dfraile/cursoReact/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* sigInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGooleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, sigInWithEmailAndPassword);\n}\nexport function* userSagas() {\n  yield all([call(onGooleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/dfraile/cursoReact/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","error","sigInWithEmail","payload","email","password","signInWithEmailAndPassword","onGooleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","sigInWithEmailAndPassword","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AAAA,iBACgB,MAAMH,IAAI,CAACI,eAAL,CAAqBH,cAArB,CADtB;AAAA,UACQI,IADR,QACQA,IADR;;AAEC,UAAMC,OAAO,GAAI,MAAMV,IAAI,CAACM,yBAAD,EAA4BG,IAA5B,CAA3B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACI,aAAa;AAAGW,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAd,CAAT;AACH,GALD,CAKC,OAAMC,KAAN,EAAY;AACT,UAAMjB,GAAG,CAACK,aAAa,CAACY,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,cAAV,CAAyB;AAACC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAV,CAAzB,EAAwD;AAC3D,MAAG;AAAA,kBACgB,MAAMf,IAAI,CAACgB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADtB;AAAA,UACQV,IADR,SACQA,IADR;;AAEC,UAAMC,OAAO,GAAI,MAAMV,IAAI,CAACM,yBAAD,EAA4BG,IAA5B,CAA3B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACI,aAAa;AAAGW,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAd,CAAT;AAEH,GAND,CAMC,OAAMC,KAAN,EAAY;AACT,UAAMjB,GAAG,CAACK,aAAa,CAACY,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,kBAAV,GAA8B;AACjC,QAAMxB,UAAU,CAACI,eAAe,CAACqB,oBAAjB,EAAuCf,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUgB,kBAAV,GAA8B;AACjC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,mBAAjB,EAAsCC,yBAAtC,CAAhB;AACH;AAED,OAAO,UAAUC,SAAV,GAAqB;AACxB,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACqB,kBAAD,CAAL,EACNrB,IAAI,CAACuB,kBAAD,CADE,CAAD,CAAT;AAEH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport { signInSuccess, signInFailure } from './user.actions';\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nexport function* signInWithGoogle(){\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        const userRef =  yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* sigInWithEmail({payload: { email, password }}){\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\n        const userRef =  yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* onGooleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, sigInWithEmailAndPassword)\n}\n\nexport function* userSagas(){\n    yield all([call(onGooleSignInStart), \n        call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}