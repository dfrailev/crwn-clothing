{"ast":null,"code":"var _jsxFileName = \"/Users/dfraile/cursoReact/crwn-clothing/client/src/App.js\";\nimport React, { useEffect, lazy } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect'; //import './App.css';//Moved to global.styles.js\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport Header from './components/header/header.component'; //Global styles instead App.css\n\nimport { GlobalStyle } from './global.styles';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { checkUserSession } from './redux/user/user.actions';\n/*//Not needed with Sagas\nimport { auth, createUserProfileDocument\n  //, addCollectionAndDocuments //To add shop.data.js to firebase\n} from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors'\n//import { selectCollectionsForPreview } from './redux/shop/shop.selectors';////To add shop.data.js to firebase\n*/\n\n/* It works with or wihtout .jsx or .js */\n\nconst App = ({\n  checkUserSession,\n  currentUser\n}) => {\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]);\n  /* Not needed with Redux. See dispatch at bottom */\n\n  /*\n  constructor() {\n    super();\n     this.state = {\n      currentUser: null\n    }\n  }\n  */\n  //unsubscribeFromAuth = null;\n  //componentDidMount(){//Not needed with hooks\n\n  /* With sagas */\n  //const { checkUserSession } = this.props;\n  //checkUserSession();\n  //const { setCurrentUser\n  //, collectionsArray//To add shop.data.js to firebase\n  //} = this.props;\n\n  /* //Remove whe using sagas\n  this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    if(userAuth){\n      \n      //get authenticated user from firebase or create it when not exists\n      const userRef = await createUserProfileDocument(userAuth);\n    \n      userRef.onSnapshot(snapShot => {\n        setCurrentUser({\n          id: snapShot.id,\n          ...snapShot.data()\n        })\n        \n        //Not needed with Redux. Using setCurrentUser instead \n        \n        //this.setState({\n          //currentUser: {\n            //id: snapShot.id,\n            //...snapShot.data()\n          //}\n        //});\n       });      \n    }\n     setCurrentUser(userAuth);\n    //To add shop.data.js to firebase\n    \n    //addCollectionAndDocuments('collections', collectionsArray.map(\n      //({title, items}) => ({ title, items})\n    //));\n    \n  //});\n  */\n  //}\n  //componentWillUnmount() {\n  //this.unsubscribeFromAuth();\n  //}\n  //render(){//Not needed with hooks\n\n  /* Switch shows just one of options, the first matches */\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(GlobalStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    render: () => currentUser ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }) : React.createElement(SignInAndSignUpPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser //, collectionsArray: selectCollectionsForPreview //To add shop.data.js to firebase\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/dfraile/cursoReact/crwn-clothing/client/src/App.js"],"names":["React","useEffect","lazy","Route","Switch","Redirect","connect","createStructuredSelector","HomePage","ShopPage","SignInAndSignUpPage","CheckoutPage","Header","GlobalStyle","selectCurrentUser","checkUserSession","App","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,QAAuC,OAAvC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC,C,CAEA;;AAEA,OAAOC,QAAP,MAAsB,qCAAtB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,MAAP,MAAmB,sCAAnB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AAEA;;;;;;;;;AAQA;;AAEA,MAAMC,GAAG,GAAE,CAAC;AAACD,EAAAA,gBAAD;AAAmBE,EAAAA;AAAnB,CAAD,KAAqC;AAE9ChB,EAAAA,SAAS,CAAC,MAAI;AACZc,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAIA;;AACA;;;;;;;;AAUA;AAEA;;AAEE;AACA;AACA;AAEA;AACE;AACD;;AAGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCF;AAEA;AACE;AACF;AAEA;;AACE;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEP,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEE,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,MAAM,EAAE,MAClCM,WAAW,GACT,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,GAGT,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAHF,CADF;AAiBD,CAzFH;;AA4FA,MAAMC,eAAe,GAAGX,wBAAwB,CAAC;AAC/CU,EAAAA,WAAW,EAAEH,iBADkC,CAE/C;;AAF+C,CAAD,CAAhD;;AAKA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACtCL,EAAAA,gBAAgB,EAAE,MAAMK,QAAQ,CAACL,gBAAgB,EAAjB;AADM,CAAL,CAAnC;;AAIA,eAAeT,OAAO,CAACY,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CH,GAA7C,CAAf","sourcesContent":["import React, { useEffect, lazy } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\n//import './App.css';//Moved to global.styles.js\n\nimport HomePage from  './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport Header from './components/header/header.component';\n\n//Global styles instead App.css\nimport { GlobalStyle } from './global.styles';\n\nimport { selectCurrentUser } from './redux/user/user.selectors'\nimport { checkUserSession } from './redux/user/user.actions';\n\n/*//Not needed with Sagas\nimport { auth, createUserProfileDocument\n  //, addCollectionAndDocuments //To add shop.data.js to firebase\n} from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors'\n//import { selectCollectionsForPreview } from './redux/shop/shop.selectors';////To add shop.data.js to firebase\n*/\n/* It works with or wihtout .jsx or .js */\n\nconst App =({checkUserSession, currentUser}) => {\n  \n  useEffect(()=>{\n    checkUserSession()\n  }, [checkUserSession]);\n\n  /* Not needed with Redux. See dispatch at bottom */\n  /*\n  constructor() {\n    super();\n\n    this.state = {\n      currentUser: null\n    }\n  }\n  */\n\n  //unsubscribeFromAuth = null;\n\n  //componentDidMount(){//Not needed with hooks\n\n    /* With sagas */\n    //const { checkUserSession } = this.props;\n    //checkUserSession();\n    \n    //const { setCurrentUser\n      //, collectionsArray//To add shop.data.js to firebase\n     //} = this.props;\n\n    \n    /* //Remove whe using sagas\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if(userAuth){\n        \n        //get authenticated user from firebase or create it when not exists\n        const userRef = await createUserProfileDocument(userAuth);\n      \n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          })\n          \n          //Not needed with Redux. Using setCurrentUser instead \n          \n          //this.setState({\n            //currentUser: {\n              //id: snapShot.id,\n              //...snapShot.data()\n            //}\n          //});\n\n        });      \n      }\n\n      setCurrentUser(userAuth);\n      //To add shop.data.js to firebase\n      \n      //addCollectionAndDocuments('collections', collectionsArray.map(\n        //({title, items}) => ({ title, items})\n      //));\n      \n    //});\n    */\n  //}\n\n  //componentWillUnmount() {\n    //this.unsubscribeFromAuth();\n  //}\n\n  //render(){//Not needed with hooks\n    /* Switch shows just one of options, the first matches */  \n    return (\n      <div>\n        <GlobalStyle />\n        <Header />        \n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route exact path='/checkout' component={CheckoutPage} />\n          <Route exact path='/signin' render={() => \n            currentUser ? (\n              <Redirect to='/' />\n            ) : (\n              <SignInAndSignUpPage />\n            )} />\n        </Switch>\n      </div>\n    );\n  }\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n  //, collectionsArray: selectCollectionsForPreview //To add shop.data.js to firebase\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n "]},"metadata":{},"sourceType":"module"}